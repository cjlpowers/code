---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-ops-view
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kube-ops-view
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["nodes", "pods"]
  verbs:
    - list
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs:
    - get
    - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kube-ops-view
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-ops-view
subjects:
- kind: ServiceAccount
  name: kube-ops-view
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: kube-ops-view
    version: v0.9.1
  name: kube-ops-view
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      application: kube-ops-view
  template:
    metadata:
      labels:
        application: kube-ops-view
        version: v0.9.1
    spec:
      serviceAccount: kube-ops-view
      containers:
      - name: service
        # see https://github.com/hjacobs/kube-ops-view/releases
        image: hjacobs/kube-ops-view:0.9.1
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: kube-ops-view
  namespace: kube-system
spec:
  selector:
    application: kube-ops-view
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kube-ops-view
  namespace: kube-system
  annotations:
   kubernetes.io/ingress.class: traefik
   traefik.ingress.kubernetes.io/auth-type: basic
   traefik.ingress.kubernetes.io/auth-secret: basic-auth  
spec:
  rules:
  - host: ops.k8s.cpowers.dev
    http:
      paths:
      - path: /
        backend:
          serviceName: kube-ops-view
          servicePort: http
  tls:
   - secretName: tls-k8s-cpowers-dev