{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vnetAddressPrefixSecondOctet": {
            "type": "int",
            "minValue": 1,
            "maxValue": 255
        },
        "vnetAddressPrefixThirdOctet": {
            "type": "int",
            "minValue": 1,
            "maxValue": 255
        },
        "vnetName": {
            "defaultValue": "vnet",
            "type": "string"
        },
        "subnetDmzInName": {
            "defaultValue": "snet-dmz-in",
            "type": "string"
        },
        "subnetDmzOutName": {
            "defaultValue": "snet-dmz-out",
            "type": "string"
        },
        "firewallOsDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS"
        },
        "firewallVirtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B1s"
        },
        "firewallAdminUsername": {
            "type": "string"
        },
        "firewallAdminPassword": {
            "type": "securestring"
        }
    },
    "variables": {
        "vnetAddressPrefix": "[concat('10.',parameters('vnetAddressPrefixSecondOctet'),'.',parameters('vnetAddressPrefixThirdOctet'),'.0/24' )]",
        "subnetGatewayAddressPrefix": "[concat('10.',parameters('vnetAddressPrefixSecondOctet'),'.',parameters('vnetAddressPrefixThirdOctet'),'.224/27' )]",
        "subnetDmzInAddressPrefix": "[concat('10.',parameters('vnetAddressPrefixSecondOctet'),'.',parameters('vnetAddressPrefixThirdOctet'),'.0/27' )]",
        "subnetDmzOutAddressPrefix": "[concat('10.',parameters('vnetAddressPrefixSecondOctet'),'.',parameters('vnetAddressPrefixThirdOctet'),'.32/27' )]",
        "routeTableGatewayName": "[concat(parameters('vnetName'),'-rt-','GatewaySubnet')]",
        "routeTableDmzInName": "[concat(parameters('vnetName'),'-rt-',parameters('subnetDmzInName'))]",
        "routeTableDmzOutName": "[concat(parameters('vnetName'),'-rt-',parameters('subnetDmzOutName'))]",
        "firewallName": "[concat(parameters('vnetName'),'-nva-firewall')]",
        "firewallNicDmzInName": "[concat(variables('firewallName'), '-nic-dmz-in')]",
        "firewallNicDmzInIpAddress": "[concat('10.',parameters('vnetAddressPrefixSecondOctet'),'.',parameters('vnetAddressPrefixThirdOctet'),'.4' )]",
        "firewallNicDmzOutName": "[concat(variables('firewallName'), '-nic-dmz-out')]",
        "firewallNicDmzOutIpAddress": "[concat('10.',parameters('vnetAddressPrefixSecondOctet'),'.',parameters('vnetAddressPrefixThirdOctet'),'.36' )]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "2018-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('subnetGatewayAddressPrefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnetDmzInName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetDmzInAddressPrefix')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableDmzInName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('subnetDmzOutName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetDmzOutAddressPrefix')]"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableDmzInName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableDmzInName')]",
            "apiVersion": "2018-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "routes": [
                    {
                        "name": "Route-Vnet",
                        "properties": {
                            "addressPrefix": "[variables('vnetAddressPrefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('firewallNicDmzInIpAddress')]"
                        }
                    },
                    {
                        "name": "Route-Internet",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('firewallNicDmzInIpAddress')]"
                        }
                    },
                    {
                        "name": "[concat('Route-',parameters('subnetDmzInName'))]",
                        "properties": {
                            "addressPrefix": "[variables('subnetDmzInAddressPrefix')]",
                            "nextHopType": "VnetLocal"
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[variables('firewallNicDmzInName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('firewallNicDmzInName'), '-ipconfig')]",
                        "properties": {
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('subnetDmzInName'))]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('firewallNicDmzInIpAddress')]",
                            "primary": true
                        }
                    }
                ],
                "enableIPForwarding": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "tags": {}
        },
        {
            "name": "[variables('firewallNicDmzOutName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('firewallNicDmzOutName'), '-ipconfig')]",
                        "properties": {
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('subnetDmzOutName'))]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('firewallNicDmzOutIpAddress')]",
                            "primary": true
                        }
                    }
                ],
                "enableIPForwarding": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "tags": {}
        },
        {
            "name": "[variables('firewallName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('firewallNicDmzInName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('firewallNicDmzOutName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('firewallVirtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('firewallOsDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('firewallNicDmzOutName'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('firewallNicDmzInName'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('firewallName')]",
                    "adminUsername": "[parameters('firewallAdminUsername')]",
                    "adminPassword": "[parameters('firewallAdminPassword')]"
                }
            },
            "tags": {},
            "resources": [
                {
                    "name": "Configure-Iptables",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2018-06-01",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('firewallName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "protectedSettings": {
                            "script": "IyEvYmluL2Jhc2gKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyBFbmFibGUgSVAgRm9yd2FyZGluZwplY2hvIG5ldC5pcHY0LmlwX2ZvcndhcmQgPSAxIHwgc3VkbyB0ZWUgLWEgL2V0Yy9zeXNjdGwuY29uZgpzdWRvIHN5c2N0bCAtcCAvZXRjL3N5c2N0bC5jb25mCgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMgQ29uZmlndXJlIGlwdGFibGVzIChmb3J3YXJkIHRyYWZmaWMgZnJvbSBldGgxIHRvIGV0aDApCmlwdGFibGVzIC0tZmx1c2gKaXB0YWJsZXMgLS10YWJsZSBuYXQgLS1mbHVzaAppcHRhYmxlcyAtLWRlbGV0ZS1jaGFpbgppcHRhYmxlcyAtLXRhYmxlIG5hdCAtLWRlbGV0ZS1jaGFpbgppcHRhYmxlcyAtRgppcHRhYmxlcyAtWAoKIyBmb3J3YXJkIHRyYWZmaWMgZnJvbSBldGgxIHRvIGV0aDAKaXB0YWJsZXMgLXQgbmF0IC1BIFBPU1RST1VUSU5HIC1vIGV0aDAgLWogTUFTUVVFUkFERQppcHRhYmxlcyAtQSBGT1JXQVJEIC1pIGV0aDEgLW8gZXRoMCAtaiBBQ0NFUFQKaXB0YWJsZXMgLUEgRk9SV0FSRCAtaSBldGgwIC1vIGV0aDEgLW0gc3RhdGUgLS1zdGF0ZSBSRUxBVEVELEVTVEFCTElTSEVEIC1qIEFDQ0VQVAoKIyBzYXZlIGlwdGFibGVzIGFjcm9zcyByZWJvb3RzCmlwdGFibGVzLXNhdmUgPiAvZXRjL2lwdGFibGVzLnJ1bGVzCg=="
                        },
                        "settings": {}
                    },
                    "comments": "Script is base64 version of firewall.init.sh (e.g. cat firewall.init.sh | base64 -w0)"
                }
            ]
        }
    ]
}